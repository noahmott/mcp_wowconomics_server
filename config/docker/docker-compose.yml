version: '3.8'

services:
  wow-mcp-server:
    build:
      context: ../..
      dockerfile: config/docker/Dockerfile
    container_name: wow-mcp-server
    ports:
      - "8000:8000"
    environment:
      - BLIZZARD_CLIENT_ID=${BLIZZARD_CLIENT_ID}
      - BLIZZARD_CLIENT_SECRET=${BLIZZARD_CLIENT_SECRET}
      - WOW_VERSION=${WOW_VERSION:-retail}
      - DEBUG=${DEBUG:-false}
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL:-https://qctcrhhqnzbfmfamzunf.supabase.co}
      - SUPABASE_KEY=${SUPABASE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFjdGNyaGhxbnpiZm1mYW16dW5mIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM1ODQzNzksImV4cCI6MjA2OTE2MDM3OX0.g4DZxrD8XMFXYBPUhVeRKZLfRsfSc3_cajnAsenXV1I}
      - PORT=8000
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - wow-network

  redis:
    image: redis:7-alpine
    container_name: wow-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wow-network

volumes:
  redis_data:
    driver: local

networks:
  wow-network:
    driver: bridge